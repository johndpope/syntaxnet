Parameter {
  name: 'brain_parser_embedding_dims'
  value: '64;32;32'
}
Parameter {
  name: 'brain_parser_embedding_names'
  value: 'words;tags;labels'
}
Parameter {
  name: 'brain_parser_features'
  value: 
  'input.word '
  'input(1).word '
  'input(2).word '
  'input(3).word '
  'stack.word '
  'stack(1).word '
  'stack(2).word '
  'stack(3).word '
  'stack.child(1).word '
  'stack.child(1).sibling(-1).word '
  'stack.child(-1).word '
  'stack.child(-1).sibling(1).word '
  'stack(1).child(1).word '
  'stack(1).child(1).sibling(-1).word '
  'stack(1).child(-1).word '
  'stack(1).child(-1).sibling(1).word '
  'stack.child(2).word '
  'stack.child(-2).word '
  'stack(1).child(2).word '
  'stack(1).child(-2).word; '
  'input.tag '
  'input(1).tag '
  'input(2).tag '
  'input(3).tag '
  'stack.tag '
  'stack(1).tag '
  'stack(2).tag '
  'stack(3).tag '
  'stack.child(1).tag '
  'stack.child(1).sibling(-1).tag '
  'stack.child(-1).tag '
  'stack.child(-1).sibling(1).tag '
  'stack(1).child(1).tag '
  'stack(1).child(1).sibling(-1).tag '
  'stack(1).child(-1).tag '
  'stack(1).child(-1).sibling(1).tag '
  'stack.child(2).tag '
  'stack.child(-2).tag '
  'stack(1).child(2).tag '
  'stack(1).child(-2).tag; '
  'stack.child(1).label '
  'stack.child(1).sibling(-1).label '
  'stack.child(-1).label '
  'stack.child(-1).sibling(1).label '
  'stack(1).child(1).label '
  'stack(1).child(1).sibling(-1).label '
  'stack(1).child(-1).label '
  'stack(1).child(-1).sibling(1).label '
  'stack.child(2).label '
  'stack.child(-2).label '
  'stack(1).child(2).label '
  'stack(1).child(-2).label '
}
Parameter {
  name: 'brain_parser_scoring'
  value: 'default'
}

input {
  name: 'tagged-training-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-train.conllu.conv'
  }
}
input {
  name: 'tagged-tuning-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-dev.conllu.conv'
  }
}
input {
  name: 'tagged-test-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-test.conllu.conv'
  }
}

input {
  name: 'char-map'
  Part {
    file_pattern: 'OUTPATH/char-map'
  }
}
input {
  name: 'label-map'
  Part {
    file_pattern: 'OUTPATH/label-map'
  }
}
input {
  name: 'word-map'
  Part {
    file_pattern: 'OUTPATH/word-map'
  }
}
input {
  name: 'lcword-map'
  Part {
    file_pattern: 'OUTPATH/lcword-map'
  }
}
input {
  name: 'tag-map'
  Part {
    file_pattern: 'OUTPATH/tag-map'
  }
}
input {
  name: 'category-map'
  Part {
    file_pattern: 'OUTPATH/category-map'
  }
}
input {
  name: 'prefix-table'
  Part {
    file_pattern: 'OUTPATH/prefix-table'
  }
}
input {
  name: 'suffix-table'
  Part {
    file_pattern: 'OUTPATH/suffix-table'
  }
}
input {
  name: 'tag-to-category'
  Part {
    file_pattern: 'OUTPATH/tag-to-category'
  }
}
input {
  name: 'projectivized-training-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-training-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-tuning-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-test-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-training-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-tuning-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-test-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'stdin'
  record_format: 'english-text'
  Part {
    file_pattern: '-'
  }
}
input {
  name: 'stdin-conll'
  record_format: 'conll-sentence'
  Part {
    file_pattern: '-'
  }
}
input {
  name: 'stdout-conll'
  record_format: 'conll-sentence'
  Part {
    file_pattern: '-'
  }
}
