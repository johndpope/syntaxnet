Parameter {
  name: 'brain_parser_embedding_dims'
  value: '64;32;32'
}
Parameter {
  name: 'brain_parser_embedding_names'
  value: 'words;tags;labels'
}
Parameter {
  name: 'brain_parser_features'
  value: 
  'input.word '
  'input(1).word '
  'input(2).word '
  'input(3).word '
  'stack.word '
  'stack(1).word '
  'stack(2).word '
  'stack(3).word '
  'stack.child(1).word '
  'stack.child(1).sibling(-1).word '
  'stack.child(-1).word '
  'stack.child(-1).sibling(1).word '
  'stack(1).child(1).word '
  'stack(1).child(1).sibling(-1).word '
  'stack(1).child(-1).word '
  'stack(1).child(-1).sibling(1).word '
  'stack.child(2).word '
  'stack.child(-2).word '
  'stack(1).child(2).word '
  'stack(1).child(-2).word; '
  'input.tag '
  'input(1).tag '
  'input(2).tag '
  'input(3).tag '
  'stack.tag '
  'stack(1).tag '
  'stack(2).tag '
  'stack(3).tag '
  'stack.child(1).tag '
  'stack.child(1).sibling(-1).tag '
  'stack.child(-1).tag '
  'stack.child(-1).sibling(1).tag '
  'stack(1).child(1).tag '
  'stack(1).child(1).sibling(-1).tag '
  'stack(1).child(-1).tag '
  'stack(1).child(-1).sibling(1).tag '
  'stack.child(2).tag '
  'stack.child(-2).tag '
  'stack(1).child(2).tag '
  'stack(1).child(-2).tag; '
  'stack.child(1).label '
  'stack.child(1).sibling(-1).label '
  'stack.child(-1).label '
  'stack.child(-1).sibling(1).label '
  'stack(1).child(1).label '
  'stack(1).child(1).sibling(-1).label '
  'stack(1).child(-1).label '
  'stack(1).child(-1).sibling(1).label '
  'stack.child(2).label '
  'stack.child(-2).label '
  'stack(1).child(2).label '
  'stack(1).child(-2).label '
}
Parameter {
  name: 'brain_parser_scoring'
  value: 'default'
}

Parameter {
  name: 'brain_tagger_embedding_dims'
  value: '64;4;8;8'
}
Parameter {
  name: 'brain_tagger_embedding_names'
  value: 'words;other;suffix;prefix'
}
Parameter {
  name: 'brain_tagger_features'
  value: 
  'stack(3).word '
  'stack(2).word '
  'stack(1).word '
  'stack.word '
  'input.word '
  'input(1).word '
  'input(2).word '
  'input(3).word; '
  'input.digit '
  'input.hyphen; '
  'stack.suffix(length=2) '
  'input.suffix(length=2) '
  'input(1).suffix(length=2); '
  'stack.prefix(length=2) '
  'input.prefix(length=2) '
  'input(1).prefix(length=2) '
}
Parameter {
  name: 'brain_tagger_transition_system'
  value: 'tagger'
}

input {
  name: 'training-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-train.conllu.conv'
  }
}
input {
  name: 'tuning-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-dev.conllu.conv'
  }
}
input {
  name: 'test-corpus'
  record_format: 'conll-sentence'
  Part {
    file_pattern: 'work/UD_English/en-ud-test.conllu.conv'
  }
}
input {
  name: 'tagged-training-corpus'
  creator: 'brain_tagger/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'tagged-tuning-corpus'
  creator: 'brain_tagger/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'tagged-test-corpus'
  creator: 'brain_tagger/greedy'
  record_format: 'conll-sentence'
}

input {
  name: 'char-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'label-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'word-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'lcword-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'tag-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'category-map'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'prefix-table'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'suffix-table'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'tag-to-category'
  creator: 'brain_tagger/greedy'
}
input {
  name: 'projectivized-training-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-training-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-tuning-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'parsed-test-corpus'
  creator: 'brain_parser/greedy'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-training-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-tuning-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'beam-parsed-test-corpus'
  creator: 'brain_parser/structured'
  record_format: 'conll-sentence'
}
input {
  name: 'stdin'
  record_format: 'english-text'
  Part {
    file_pattern: '-'
  }
}
input {
  name: 'stdin-conll'
  record_format: 'conll-sentence'
  Part {
    file_pattern: '-'
  }
}
input {
  name: 'stdout-conll'
  record_format: 'conll-sentence'
  Part {
    file_pattern: '-'
  }
}
